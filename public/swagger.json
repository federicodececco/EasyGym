{
  "openapi": "3.0.0",
  "info": {
    "title": "Easy Gym Documentation",
    "version": "1.0.0",
    "description": "API documentation for Easy Gym Backend"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    }
  ],
  "paths": {
    "/api/users": {
      "get": {
        "summary": "Get all users",
        "description": "Retrieves a list of all users from the database",
        "tags": ["Users"],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                },
                "example": [
                  {
                    "id": 1,
                    "name": "Gigio",
                    "surname": "Bagigio",
                    "email": "gigio@example.com",
                    "height": "176",
                    "weight": "81",
                    "createdAt": "2024-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Failed to fetch"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "description": "Creates a new user in the database",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserInput"
              },
              "example": {
                "name": "Jane",
                "surname": "Doe",
                "email": "jane@example.com",
                "height": "165",
                "weight": "60"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "example": {
                  "id": 3,
                  "name": "Jane",
                  "surname": "Doe",
                  "email": "jane@example.com",
                  "height": "165",
                  "weight": "60",
                  "createdAt": "2024-01-03T00:00:00.000Z"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Failed to create resource"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "summary": "Get user by ID",
        "description": "Retrieves a specific user by their ID",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "example": {
                  "id": 1,
                  "name": "Gigio",
                  "surname": "Bagigio",
                  "email": "gigio@example.com",
                  "height": "176",
                  "weight": "81",
                  "createdAt": "2024-01-01T00:00:00.000Z"
                }
              }
            }
          },
          "400": {
            "description": "Invalid user ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Invalid user ID"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "User not found"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Internal server error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update user",
        "description": "Updates an existing user's information",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "User ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserInput"
              },
              "example": {
                "name": "Gigio",
                "surname": "Bagigio",
                "email": "gigio.updated@example.com",
                "height": "180",
                "weight": "85"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "example": {
                  "id": 1,
                  "name": "Gigio",
                  "surname": "Bagigio",
                  "email": "gigio.updated@example.com",
                  "height": "180",
                  "weight": "85",
                  "updatedAt": "2024-01-05T00:00:00.000Z"
                }
              }
            }
          },
          "400": {
            "description": "Invalid user ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Invalid user ID"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "User not found"
                }
              }
            }
          },
          "409": {
            "description": "Email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Email already exists"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Failed to update user"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user",
        "description": "Deletes a user from the database",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "example": {
                  "id": 1,
                  "name": "Gigio",
                  "surname": "Bagigio",
                  "email": "gigio@example.com",
                  "height": "176",
                  "weight": "81"
                }
              }
            }
          },
          "400": {
            "description": "Invalid user ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Invalid user ID"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "User not found"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/api/workout-plans": {
      "get": {
        "summary": "Get all workout plans",
        "description": "Retrieves a list of all workout plans from the database",
        "tags": ["Workout Plans"],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkoutPlan"
                  }
                },
                "example": [
                  {
                    "id": 1,
                    "userId": 1,
                    "name": "Forza Upper Body",
                    "startData": "2025-01-01",
                    "expirationData": "2025-03-31",
                    "createdAt": "2024-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Internal server error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new workout plan",
        "description": "Creates a new workout plan in the database",
        "tags": ["Workout Plans"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWorkoutPlanInput"
              },
              "example": {
                "userId": 1,
                "name": "Full Body Workout",
                "startData": "2025-02-01",
                "expirationData": "2025-04-30",
                "exercises": [1, 2, 3, 4]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Workout plan created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkoutPlan"
                },
                "example": {
                  "id": 3,
                  "userId": 1,
                  "name": "Full Body Workout",
                  "startData": "2025-02-01",
                  "expirationData": "2025-04-30",
                  "createdAt": "2024-01-03T00:00:00.000Z"
                }
              }
            }
          },
          "400": {
            "description": "Invalid user ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "User id is invalid or not existing"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Failed to create resource"
                }
              }
            }
          }
        }
      }
    },
    "/api/workout-plans/{id}": {
      "get": {
        "summary": "Get workout plan by ID",
        "description": "Retrieves a specific workout plan by its ID",
        "tags": ["Workout Plans"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Workout plan ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkoutPlan"
                },
                "example": {
                  "id": 1,
                  "userId": 1,
                  "name": "Forza Upper Body",
                  "startData": "2025-01-01",
                  "expirationData": "2025-03-31",
                  "createdAt": "2024-01-01T00:00:00.000Z"
                }
              }
            }
          },
          "400": {
            "description": "Invalid workout plan ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Invalid workoutPlan ID"
                }
              }
            }
          },
          "404": {
            "description": "Workout plan not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "workoutPlan not found"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Internal server error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update workout plan",
        "description": "Updates an existing workout plan",
        "tags": ["Workout Plans"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Workout plan ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWorkoutPlanInput"
              },
              "example": {
                "name": "Forza Upper Body - Updated",
                "startData": "2025-01-15",
                "expirationData": "2025-04-15"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Workout plan updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkoutPlan"
                },
                "example": {
                  "id": 1,
                  "userId": 1,
                  "name": "Forza Upper Body - Updated",
                  "startData": "2025-01-15",
                  "expirationData": "2025-04-15",
                  "updatedAt": "2024-01-05T00:00:00.000Z"
                }
              }
            }
          },
          "400": {
            "description": "Invalid workout plan ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Invalid WorkoutPlan ID"
                }
              }
            }
          },
          "404": {
            "description": "Workout plan not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "WorkoutPlan not found"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Failed to update WorkoutPlan"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete workout plan",
        "description": "Deletes a workout plan from the database",
        "tags": ["Workout Plans"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Workout plan ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Workout plan deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkoutPlan"
                },
                "example": {
                  "id": 1,
                  "userId": 1,
                  "name": "Forza Upper Body",
                  "startData": "2025-01-01",
                  "expirationData": "2025-03-31"
                }
              }
            }
          },
          "400": {
            "description": "Invalid workout plan ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Invalid user ID"
                }
              }
            }
          },
          "404": {
            "description": "Workout plan not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "User not found"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Internal server error"
                }
              }
            }
          }
        }
      }
    },"/api/exercises": {
      "get": {
        "summary": "Get all exercises",
        "description": "Retrieves a list of all exercises from the database",
        "tags": ["Exercises"],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Exercise"
                  }
                },
                "example": [
                  {
                    "id": 1,
                    "name": "Bench Press",
                    "series": 4,
                    "repetition": 10,
                    "restPeriod": 90,
                    "typeOfWeight": "Barbell",
                    "weight": 80,
                    "created_at": "2024-01-01T00:00:00.000Z"
                  }
                ]
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Internal server error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new exercise",
        "description": "Creates a new exercise in the database",
        "tags": ["Exercises"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateExerciseInput"
              },
              "example": {
                "name": "Squat",
                "series": 5,
                "repetition": 5,
                "restPeriod": 180,
                "typeOfWeight": "Barbell",
                "weight": 100
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Exercise created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exercise"
                },
                "example": {
                  "id": 2,
                  "name": "Squat",
                  "series": 5,
                  "repetition": 5,
                  "restPeriod": 180,
                  "typeOfWeight": "Barbell",
                  "weight": 100,
                  "created_at": "2024-01-02T00:00:00.000Z"
                }
              }
            }
          },
          "400": {
            "description": "Exercise name already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Exercise name already exists"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Failed to create resource"
                }
              }
            }
          }
        }
      }
    },
    "/api/exercises/{id}": {
      "get": {
        "summary": "Get exercise by ID",
        "description": "Retrieves a specific exercise by its ID",
        "tags": ["Exercises"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Exercise ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exercise"
                },
                "example": {
                  "id": 1,
                  "name": "Bench Press",
                  "series": 4,
                  "repetition": 10,
                  "restPeriod": 90,
                  "typeOfWeight": "Barbell",
                  "weight": 80,
                  "created_at": "2024-01-01T00:00:00.000Z"
                }
              }
            }
          },
          "400": {
            "description": "Invalid exercise ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Invalid exercise ID"
                }
              }
            }
          },
          "404": {
            "description": "Exercise not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Exercise not found"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Internal server error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update exercise",
        "description": "Updates an existing exercise",
        "tags": ["Exercises"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Exercise ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateExerciseInput"
              },
              "example": {
                "series": 5,
                "repetition": 8,
                "restPeriod": 120,
                "weight": 85
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Exercise updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exercise"
                },
                "example": {
                  "id": 1,
                  "name": "Bench Press",
                  "series": 5,
                  "repetition": 8,
                  "restPeriod": 120,
                  "typeOfWeight": "Barbell",
                  "weight": 85,
                  "created_at": "2024-01-01T00:00:00.000Z"
                }
              }
            }
          },
          "400": {
            "description": "Invalid exercise ID or name already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Invalid exercise ID or name already exists"
                }
              }
            }
          },
          "404": {
            "description": "Exercise not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Exercise not found"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Failed to update exercise"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete exercise",
        "description": "Deletes an exercise from the database",
        "tags": ["Exercises"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Exercise ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Exercise deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exercise"
                },
                "example": {
                  "id": 1,
                  "name": "Bench Press",
                  "series": 4,
                  "repetition": 10,
                  "restPeriod": 90,
                  "typeOfWeight": "Barbell",
                  "weight": 80,
                  "created_at": "2024-01-01T00:00:00.000Z"
                }
              }
            }
          },
          "400": {
            "description": "Invalid exercise ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Invalid exercise ID"
                }
              }
            }
          },
          "404": {
            "description": "Exercise not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Exercise not found"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Internal server error"
                }
              }
            }
          }
        }
      }
    },"/api/masses": {
      "get": {
        "summary": "Get all mass records",
        "description": "Retrieves a list of all mass measurements from the database",
        "tags": ["Mass"],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Mass"
                  }
                },
                "example": [
                  {
                    "id": 1,
                    "date": "2025-01-15T00:00:00.000Z",
                    "percent": 15,
                    "weight": 75,
                    "isLeanMass": true,
                    "userId": 1
                  }
                ]
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Internal server error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new mass record",
        "description": "Creates a new mass measurement in the database",
        "tags": ["Mass"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMassInput"
              },
              "example": {
                "percent": 18,
                "weight": 80,
                "isLeanMass": false,
                "userId": 1
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Mass record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Mass"
                },
                "example": {
                  "id": 2,
                  "date": "2025-01-20T00:00:00.000Z",
                  "percent": 18,
                  "weight": 80,
                  "isLeanMass": false,
                  "userId": 1
                }
              }
            }
          },
          "400": {
            "description": "Invalid user ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "User id is invalid or not existing"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Failed to create resource"
                }
              }
            }
          }
        }
      }
    },
    "/api/masses/{id}": {
      "get": {
        "summary": "Get mass record by ID",
        "description": "Retrieves a specific mass measurement by its ID",
        "tags": ["Mass"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Mass record ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Mass"
                },
                "example": {
                  "id": 1,
                  "date": "2025-01-15T00:00:00.000Z",
                  "percent": 15,
                  "weight": 75,
                  "isLeanMass": true,
                  "userId": 1
                }
              }
            }
          },
          "400": {
            "description": "Invalid mass ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Invalid mass ID"
                }
              }
            }
          },
          "404": {
            "description": "Mass record not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Mass not found"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Internal server error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update mass record",
        "description": "Updates an existing mass measurement",
        "tags": ["Mass"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Mass record ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMassInput"
              },
              "example": {
                "percent": 16,
                "weight": 76,
                "isLeanMass": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Mass record updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Mass"
                },
                "example": {
                  "id": 1,
                  "date": "2025-01-15T00:00:00.000Z",
                  "percent": 16,
                  "weight": 76,
                  "isLeanMass": true,
                  "userId": 1
                }
              }
            }
          },
          "400": {
            "description": "Invalid mass ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Invalid mass ID"
                }
              }
            }
          },
          "404": {
            "description": "Mass record not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Mass not found"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Failed to update mass"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete mass record",
        "description": "Deletes a mass measurement from the database",
        "tags": ["Mass"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Mass record ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Mass record deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Mass"
                },
                "example": {
                  "id": 1,
                  "date": "2025-01-15T00:00:00.000Z",
                  "percent": 15,
                  "weight": 75,
                  "isLeanMass": true,
                  "userId": 1
                }
              }
            }
          },
          "400": {
            "description": "Invalid mass ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Invalid mass ID"
                }
              }
            }
          },
          "404": {
            "description": "Mass record not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Mass not found"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Internal server error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "User ID"
          },
          "name": {
            "type": "string",
            "description": "User's first name"
          },
          "surname": {
            "type": "string",
            "description": "User's last name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "height": {
            "type": "string",
            "description": "User's height in cm"
          },
          "weight": {
            "type": "string",
            "description": "User's weight in kg"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when user was created"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when user was last updated"
          }
        },
        "required": ["id", "name", "surname", "email", "height", "weight"]
      },
      "CreateUserInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's first name"
          },
          "surname": {
            "type": "string",
            "description": "User's last name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "height": {
            "type": "string",
            "description": "User's height in cm"
          },
          "weight": {
            "type": "string",
            "description": "User's weight in kg"
          }
        },
        "required": ["name", "surname", "email", "height", "weight"]
      },
      "UpdateUserInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's first name"
          },
          "surname": {
            "type": "string",
            "description": "User's last name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "height": {
            "type": "string",
            "description": "User's height in cm"
          },
          "weight": {
            "type": "string",
            "description": "User's weight in kg"
          }
        }
      },
      "WorkoutPlan": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Workout plan ID"
          },
          "userId": {
            "type": "integer",
            "description": "ID of the user this workout plan belongs to"
          },
          "name": {
            "type": "string",
            "description": "Name of the workout plan"
          },
          "startData": {
            "type": "string",
            "format": "date",
            "description": "Start date of the workout plan"
          },
          "expirationData": {
            "type": "string",
            "format": "date",
            "description": "Expiration date of the workout plan"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when workout plan was created"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when workout plan was last updated"
          }
        },
        "required": ["id", "userId", "name", "startData", "expirationData"]
      },
      "CreateWorkoutPlanInput": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "ID of the user this workout plan belongs to"
          },
          "name": {
            "type": "string",
            "description": "Name of the workout plan"
          },
          "startData": {
            "type": "string",
            "format": "date",
            "description": "Start date of the workout plan"
          },
          "expirationData": {
            "type": "string",
            "format": "date",
            "description": "Expiration date of the workout plan"
          },
          "exercises": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "Array of exercise IDs to include in the workout plan"
          }
        },
        "required": ["userId", "name", "startData", "expirationData"]
      },
      "UpdateWorkoutPlanInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the workout plan"
          },
          "startData": {
            "type": "string",
            "format": "date",
            "description": "Start date of the workout plan"
          },
          "expirationData": {
            "type": "string",
            "format": "date",
            "description": "Expiration date of the workout plan"
          },
          "exercises": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "Array of exercise IDs to include in the workout plan"
          }
        }
      },
      "Mass": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Mass record ID"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "Date of the measurement"
          },
          "percent": {
            "type": "integer",
            "description": "Percentage of body mass"
          },
          "weight": {
            "type": "integer",
            "description": "Weight in kg"
          },
          "isLeanMass": {
            "type": "boolean",
            "description": "Indicates if this is lean mass or fat mass"
          },
          "userId": {
            "type": "integer",
            "description": "ID of the user this measurement belongs to"
          }
        },
        "required": ["id", "date", "percent", "weight", "isLeanMass", "userId"]
      },
      "CreateMassInput": {
        "type": "object",
        "properties": {
          "percent": {
            "type": "integer",
            "description": "Percentage of body mass"
          },
          "weight": {
            "type": "integer",
            "description": "Weight in kg"
          },
          "isLeanMass": {
            "type": "boolean",
            "description": "Indicates if this is lean mass or fat mass"
          },
          "userId": {
            "type": "integer",
            "description": "ID of the user this measurement belongs to"
          }
        },
        "required": ["percent", "weight", "isLeanMass", "userId"]
      },
      "UpdateMassInput": {
        "type": "object",
        "properties": {
          "percent": {
            "type": "integer",
            "description": "Percentage of body mass"
          },
          "weight": {
            "type": "integer",
            "description": "Weight in kg"
          },
          "isLeanMass": {
            "type": "boolean",
            "description": "Indicates if this is lean mass or fat mass"
          }
        }
      },
      "Trainer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Trainer ID"
          },
          "role": {
            "type": "string",
            "description": "Trainer's role or specialization"
          },
          "userId": {
            "type": "integer",
            "description": "ID of the user who is the trainer"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when trainer was created"
          }
        },
        "required": ["id", "role", "userId", "created_at"]
      },
      "CreateTrainerInput": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "description": "Trainer's role or specialization"
          },
          "userId": {
            "type": "integer",
            "description": "ID of the user who will become a trainer"
          }
        },
        "required": ["role", "userId"]
      },
      "UpdateTrainerInput": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "description": "Trainer's role or specialization"
          }
        }
      },
      "Exercise": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Exercise ID"
          },
          "name": {
            "type": "string",
            "description": "Name of the exercise"
          },
          "series": {
            "type": "integer",
            "description": "Number of sets"
          },
          "repetition": {
            "type": "integer",
            "description": "Number of repetitions per set"
          },
          "restPeriod": {
            "type": "integer",
            "description": "Rest period between sets in seconds"
          },
          "typeOfWeight": {
            "type": "string",
            "description": "Type of weight used (e.g., Barbell, Dumbbell, Machine)"
          },
          "weight": {
            "type": "integer",
            "description": "Weight in kg"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when exercise was created"
          }
        },
        "required": ["id", "name", "series", "repetition", "restPeriod", "typeOfWeight", "weight", "created_at"]
      },
      "CreateExerciseInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the exercise"
          },
          "series": {
            "type": "integer",
            "description": "Number of sets"
          },
          "repetition": {
            "type": "integer",
            "description": "Number of repetitions per set"
          },
          "restPeriod": {
            "type": "integer",
            "description": "Rest period between sets in seconds"
          },
          "typeOfWeight": {
            "type": "string",
            "description": "Type of weight used (e.g., Barbell, Dumbbell, Machine)"
          },
          "weight": {
            "type": "integer",
            "description": "Weight in kg"
          }
        },
        "required": ["name", "series", "repetition", "restPeriod", "typeOfWeight", "weight"]
      },
      "UpdateExerciseInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the exercise"
          },
          "series": {
            "type": "integer",
            "description": "Number of sets"
          },
          "repetition": {
            "type": "integer",
            "description": "Number of repetitions per set"
          },
          "restPeriod": {
            "type": "integer",
            "description": "Rest period between sets in seconds"
          },
          "typeOfWeight": {
            "type": "string",
            "description": "Type of weight used (e.g., Barbell, Dumbbell, Machine)"
          },
          "weight": {
            "type": "integer",
            "description": "Weight in kg"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Users",
      "description": "User management endpoints"
    },
    {
      "name": "Workout Plans",
      "description": "Workout plan management endpoints"
    },{
      "name": "Mass",
      "description": "Body mass measurement endpoints"
    },
    {
      "name": "Exercises",
      "description": "Exercise management endpoints"
    }
  ]
}